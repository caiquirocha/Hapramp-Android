apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

def getUsername() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("username");
}

def getPpk() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("ppk");
}

android {

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    signingConfigs {
        release {
            keyAlias 'hapramp-and'
            keyPassword 'hapramp'
            storeFile file("$rootDir\\hapramp.jks")
            storePassword 'hapramp'
        }
    }

    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {

        }

    }


    defaultConfig {
        applicationId "com.hapramp"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 5
        versionName "0.0.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "Hapramp-${getDate()}-$versionName")

        buildConfigField "String", "TEST_USERNAME", "\"" + getUsername() + "\""
        buildConfigField "String", "TEST_PPK", "\"" + getPpk() + "\""

        multiDexEnabled true
    }

}

dependencies {

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    implementation 'com.google.firebase:firebase-storage:11.8.0'
    implementation 'com.google.firebase:firebase-auth:11.8.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.jakewharton:butterknife:8.6.0'
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'
    implementation 'com.github.irshulx:laser-native-editor:2.1.0'
    implementation 'eu.bittrade.libs:steemj-core:0.4.3'
    implementation 'com.google.android.gms:play-services-vision:11.8.0'
    implementation 'info.androidhive:barcode-reader:1.1.5'
    implementation 'com.google.dagger:dagger:2.13'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.13'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2') {
        exclude group: 'com.android.support'
    }
    androidTestImplementation('com.android.support.test:runner:0.3') {
        exclude group: 'com.android.support'
    }
    androidTestImplementation('com.android.support.test:rules:0.3') {
        exclude group: 'com.android.support'
    }

}
apply plugin: 'com.google.gms.google-services'